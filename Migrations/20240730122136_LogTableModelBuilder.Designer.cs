// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ilkDeneme.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240730122136_LogTableModelBuilder")]
    partial class LogTableModelBuilder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Durum", b =>
                {
                    b.Property<int>("DurumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DurumAdi")
                        .HasColumnType("text");

                    b.HasKey("DurumId");

                    b.ToTable("Durumlar");

                    b.HasData(
                        new
                        {
                            DurumId = 1,
                            DurumAdi = "Başarılı"
                        },
                        new
                        {
                            DurumId = 2,
                            DurumAdi = "Başarısız"
                        });
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Il", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IlAdi")
                        .HasColumnType("text");

                    b.HasKey("IlId");

                    b.ToTable("Iller");
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Ilce", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("IlId")
                        .HasColumnType("integer");

                    b.Property<string>("IlceAdi")
                        .HasColumnType("text");

                    b.HasKey("IlceId");

                    b.HasIndex("IlId");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.IslemTip", b =>
                {
                    b.Property<int>("IslemTipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IslemAdi")
                        .HasColumnType("text");

                    b.HasKey("IslemTipId");

                    b.ToTable("IslemTipleri");

                    b.HasData(
                        new
                        {
                            IslemTipId = 1,
                            IslemAdi = "Yeni Kayıt"
                        },
                        new
                        {
                            IslemTipId = 2,
                            IslemAdi = "Güncelleme"
                        },
                        new
                        {
                            IslemTipId = 3,
                            IslemAdi = "Silme"
                        },
                        new
                        {
                            IslemTipId = 4,
                            IslemAdi = "Giriş"
                        });
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<int>("DurumId")
                        .HasColumnType("integer");

                    b.Property<int>("IslemTipId")
                        .HasColumnType("integer");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("KullaniciIp")
                        .HasColumnType("text");

                    b.Property<DateTime>("TarihSaat")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("LogId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Mahalle", b =>
                {
                    b.Property<int>("MahalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("IlceId")
                        .HasColumnType("integer");

                    b.Property<string>("MahalleAdi")
                        .HasColumnType("text");

                    b.HasKey("MahalleId");

                    b.HasIndex("IlceId");

                    b.ToTable("Mahalleler");
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Tasinmaz", b =>
                {
                    b.Property<int>("TasinmazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ada")
                        .HasColumnType("text");

                    b.Property<string>("KoordinatBilgileri")
                        .HasColumnType("text");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("MahalleId")
                        .HasColumnType("integer");

                    b.Property<string>("Nitelik")
                        .HasColumnType("text");

                    b.Property<string>("Parsel")
                        .HasColumnType("text");

                    b.HasKey("TasinmazId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("MahalleId");

                    b.ToTable("Tasinmazlar");
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.User", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("KullaniciId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Ilce", b =>
                {
                    b.HasOne("ilkDeneme.Entities.Concrete.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Mahalle", b =>
                {
                    b.HasOne("ilkDeneme.Entities.Concrete.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ilkDeneme.Entities.Concrete.Tasinmaz", b =>
                {
                    b.HasOne("ilkDeneme.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ilkDeneme.Entities.Concrete.Mahalle", "Mahalle")
                        .WithMany()
                        .HasForeignKey("MahalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
